{"version":3,"file":"static/js/405.bda407f7.chunk.js","mappings":"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","sources":["components/Psychologist/PsychologistCard.styled.js","components/Psychologist/PsychologistCard.jsx","pages/Psychologists.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const PsycWrap = styled.div`\n    border-radius: 24px;\n    background: rgb(255, 255, 255);\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n    padding: 24px;\n    width: 100%;\n`\n\nexport const AvatarWrap = styled.img`\n    width: 120px;\n    height: 120px;\n    border: 2px solid rgba(84, 190, 150, 0.2);\n    border-radius: 30px;\n    padding: 12px;\n`\n\nexport const DescriptionWrap = styled.div`\n    width: 100%;\n`\nexport const HeadDescriptionWrap = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n    width: 100%;\n    \n`\nexport const PsyText = styled.p`\n    color: rgb(138, 138, 137);\n    font-weight: 500;\n    line-height: 1.5;\n    letter-spacing: 0;\n    text-align: left;\n    margin-right: auto;\n`\n\nexport const RatingPriceBlock = styled.div`\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n    margin-right: 28px;\n`\n\nexport const RatingPriceText = styled.p`\n    color: var(--black-color);\n    font-weight: 500;\n    line-height: 1.5;\n    letter-spacing: 0;\n    text-align: left;\n\n&::after {\n        content: '';\n        width: 0px;\n        height: 16px;\n        border: 1px solid rgba(25, 26, 21, 0.2);\n        margin-left: 16px;\n        margin-right: 16px;\n    }\n    \n    &:last-child::after {\n        content: none;\n    }\n`\nexport const RatingPriceTextSpan = styled.span`\n    color: var(--green-color);\n`\nexport const SvgStar = styled.svg`\n    width: 16px;\n    height: 16px;\n    margin-right: 8px;\n`\nexport const SvgHeart = styled.svg`\n    width: 26px;\n    height: 26px;\n    fill: none;\n    stroke: rgb(25, 26, 21);\n`\nexport const PsychologistName = styled.p`\n    font-size: 24px;\n    font-weight: 500;\n    letter-spacing: 0;\n    margin-bottom: 24px;\n`\nexport const SkillsBlock = styled.div`\n    display: flex;\n    gap: 8px 4px;\n    flex-wrap: wrap;\n    margin-bottom: 24px;\n`\n\nexport const SkillsBlockText = styled.p`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 8px 16px 8px 16px;\n    border-radius: 24px;\n    background: rgb(243, 243, 243);\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1;\n    letter-spacing: 0;\n`\nexport const SkillsSpan = styled.span`\n    color: var(--black-light-color);\n`\nexport const DescriptionText = styled.p`\n    color: rgba(25, 26, 21, 0.5);\n    font-weight: 400;\n    line-height: 20px;\n    letter-spacing: 0;\n    margin-bottom: 14px;\n`\nexport const ReadMoreButton = styled.button`\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.5;\n    text-decoration: underline;\n\n`\n","import React, { useState } from 'react';\nimport {\n  DescriptionText,\n  DescriptionWrap,\n  HeadDescriptionWrap,\n  PsyText,\n  PsycWrap,\n  PsychologistName,\n  RatingPriceBlock,\n  RatingPriceText,\n  RatingPriceTextSpan,\n  SkillsBlock,\n  SkillsBlockText,\n  SkillsSpan,\n  SvgHeart,\n  SvgStar,\n} from './PsychologistCard.styled';\nimport icons from '../../img/icons.svg';\n\nconst PsychologistCard = ({ psychologists }) => {\n  const [loadMoreCount, setLoadMoreCount] = useState(3);\n\n  const loadMore = () => {\n    setLoadMoreCount(prevCount => prevCount + 3);\n  };\n\n  return (\n    <PsycWrap>\n      {psychologists.slice(0, loadMoreCount).map(psychologist => (\n        <div key={psychologist.id}>\n          <img src={psychologist.avatar_url} alt=\"\" />\n          <svg\n            width=\"30\"\n            height=\"20\"\n            viewBox=\"0 0 14 14\"\n            fill=\"#38CD3E\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <circle cx=\"7\" cy=\"7\" r=\"7\" fill=\"#FBFBFB\" />\n            <circle cx=\"7.00065\" cy=\"7.00009\" r=\"4.66667\" fillRule=\"#38CD3E\" />\n          </svg>\n          <DescriptionWrap>\n            <HeadDescriptionWrap>\n              <PsyText>Psychologist</PsyText>\n              <RatingPriceBlock>\n                <SvgStar>\n                  <use href={`${icons}#icon-star`}></use>\n                </SvgStar>\n                <RatingPriceText>Rating: {psychologist.rating}</RatingPriceText>\n                <RatingPriceText>\n                  Price / 1 hour:{' '}\n                  <RatingPriceTextSpan>\n                    {psychologist.price_per_hour}$\n                  </RatingPriceTextSpan>{' '}\n                </RatingPriceText>\n              </RatingPriceBlock>\n              <SvgHeart>\n                <use href={`${icons}#icon-heart`}></use>\n              </SvgHeart>\n            </HeadDescriptionWrap>\n            <PsychologistName>{psychologist.name}</PsychologistName>\n            <SkillsBlock>\n              <SkillsBlockText>\n                <SkillsSpan>Experience: </SkillsSpan> {psychologist.experience}{' '}\n                years\n              </SkillsBlockText>\n              <SkillsBlockText>\n                <SkillsSpan>License: </SkillsSpan> {psychologist.license}\n              </SkillsBlockText>\n              <SkillsBlockText>\n                <SkillsSpan>Specialization: </SkillsSpan>{' '}\n                {psychologist.specialization}\n              </SkillsBlockText>\n              <SkillsBlockText>\n                <SkillsSpan>Initial consultation: </SkillsSpan>{' '}\n                {psychologist.initial_consultation}\n              </SkillsBlockText>\n            </SkillsBlock>\n            <DescriptionText>{psychologist.about}</DescriptionText>\n            <button type=\"button\">Read more</button>\n          </DescriptionWrap>\n        </div>\n      ))}\n      <button type=\"button\" onClick={loadMore}>\n        Load more\n      </button>\n    </PsycWrap>\n  );\n};\n\nexport default PsychologistCard;\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { Container } from \"../components/Container.styled\";\nimport PsychologistCard from \"../components/Psychologist/PsychologistCard\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\n\nconst Psychologists = () => {\n  const filter = useContext(createContext(null));\n\n  const [psychologists, setPsychologists] = useState([]);\n\n  useEffect(() => {\n    if (!filter) return;\n\n    if (filter.firstFilter) {\n      const database = getDatabase();\n      const databaseRef = ref(database);\n\n      onValue(databaseRef, (snapshot) => {\n        const data = snapshot.val();\n\n        let list;\n        if (filter.filter === \"price_per_hour\") {\n          list = Object.values(data).filter(\n            (item) => item[filter.filter] <= filter.value\n          );\n        } else {\n          list = Object.values(data).filter((item) =>\n            item[filter.filter].includes(filter.value)\n          );\n        }\n\n        setPsychologists(list);\n      });\n    }\n  }, [filter]);\n\n  useEffect(() => {\n    const database = getDatabase();\n    const databaseRef = ref(database);\n\n    onValue(databaseRef, (snapshot) => {\n      const data = snapshot.val();\n      setPsychologists(Object.values(data));\n    });\n  }, []);\n\n  return (\n    <Container>\n      <PsychologistCard psychologists={psychologists}/>\n    </Container>\n  )\n}\n\nexport default Psychologists\n"],"names":["PsycWrap","styled","_templateObject","_taggedTemplateLiteral","DescriptionWrap","_templateObject2","_templateObject3","HeadDescriptionWrap","_templateObject4","PsyText","_templateObject5","RatingPriceBlock","_templateObject6","RatingPriceText","_templateObject7","RatingPriceTextSpan","_templateObject8","SvgStar","_templateObject9","SvgHeart","_templateObject10","PsychologistName","_templateObject11","SkillsBlock","_templateObject12","SkillsBlockText","_templateObject13","SkillsSpan","_templateObject14","DescriptionText","_templateObject15","_templateObject16","_ref","psychologists","_useState","useState","_useState2","_slicedToArray","loadMoreCount","setLoadMoreCount","_jsxs","children","slice","map","psychologist","_jsx","src","avatar_url","alt","width","height","viewBox","fill","xmlns","cx","cy","r","fillRule","href","concat","icons","rating","price_per_hour","name","experience","license","specialization","initial_consultation","about","type","id","onClick","prevCount","filter","useContext","createContext","setPsychologists","useEffect","firstFilter","database","getDatabase","databaseRef","ref","onValue","snapshot","list","data","val","Object","values","item","value","includes","Container","PsychologistCard"],"sourceRoot":""}