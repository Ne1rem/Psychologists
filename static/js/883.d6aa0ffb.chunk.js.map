{"version":3,"file":"static/js/883.d6aa0ffb.chunk.js","mappings":"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","sources":["components/Psychologist/PsychologistCard.styled.js","components/ModalAppointment/ModalAppointment.jsx","components/Psychologist/PsychologistCard.jsx","pages/Psychologists.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const PsycWrap = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n`\nexport const DivCardPsy = styled.div`\n    border-radius: 24px;\n    background: rgb(255, 255, 255);\n    padding: 24px;\n    width: 100%;\n    display: flex;\n    `\n\nexport const AvatarWrap = styled.img`\n    width: 120px;\n    height: 120px;\n    border: 2px solid rgba(84, 190, 150, 0.2);\n    border-radius: 30px;\n    padding: 12px;\n`\nexport const SvgImageAvatar = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: #38CD3E;\n  position: relative;\n  top: 9px;\n  left: 104px;\n`;\n\nexport const DescriptionWrap = styled.div`\n    width: 100%;\n    padding-left: 24px;\n`\nexport const HeadDescriptionWrap = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n    width: 100%;\n    \n`\nexport const PsyText = styled.p`\n    color: rgb(138, 138, 137);\n    font-weight: 500;\n    line-height: 1.5;\n    letter-spacing: 0;\n    text-align: left;\n    margin-right: auto;\n`\n\nexport const RatingPriceBlock = styled.div`\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n    margin-right: 28px;\n`\n\nexport const RatingPriceText = styled.p`\n    color: var(--black-color);\n    font-weight: 500;\n    line-height: 1.5;\n    letter-spacing: 0;\n    text-align: left;\n\n&::after {\n        content: '';\n        width: 0px;\n        height: 16px;\n        border: 1px solid rgba(25, 26, 21, 0.2);\n        margin-left: 16px;\n        margin-right: 16px;\n    }\n    \n    &:last-child::after {\n        content: none;\n    }\n`\nexport const RatingPriceTextSpan = styled.span`\n    color: var(--green-color);\n`\nexport const SvgStar = styled.svg`\n    width: 16px;\n    height: 16px;\n    margin-right: 8px;\n`\nexport const SvgHeart = styled.svg`\n    width: 26px;\n    height: 26px;\n    fill: none;\n    stroke: rgb(25, 26, 21);\n`\nexport const PsychologistName = styled.p`\n    font-size: 24px;\n    font-weight: 500;\n    letter-spacing: 0;\n    margin-bottom: 24px;\n`\nexport const SkillsBlock = styled.div`\n    display: flex;\n    gap: 8px 4px;\n    flex-wrap: wrap;\n    margin-bottom: 24px;\n`\n\nexport const SkillsBlockText = styled.p`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 8px 16px 8px 16px;\n    border-radius: 24px;\n    background: rgb(243, 243, 243);\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1;\n    letter-spacing: 0;\n`\nexport const SkillsSpan = styled.span`\n    color: var(--black-light-color);\n`\nexport const DescriptionText = styled.p`\n    color: rgba(25, 26, 21, 0.5);\n    font-weight: 400;\n    line-height: 20px;\n    letter-spacing: 0;\n    margin-bottom: 14px;\n`\nexport const ReadMoreButton = styled.button`\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.5;\n    text-decoration: underline;\n\n`\n\nexport const ButtonReadMore = styled.button`\nfont-family: Inter;\nfont-size: 16px;\nfont-weight: 500;\nletter-spacing: 0em;\ntext-align: left;\ntext-decoration: underline;\n`\n\nexport const AvatarReviewIcon = styled.p`\nbackground: rgba(52, 112, 255, 0.2);\ncolor: (var(--green-color));\nfont-family: Inter;\nfont-size: 20px;\nfont-weight: 500;\nline-height: 20px;\nletter-spacing: 0em;\ntext-align: left;\nborder-radius: 100px;\nheight: 44px;\nwidth: 44px;\nalign-items: center;\njustify-content: center;\ndisplay: flex;\nmargin-right: 12px;\n`\nexport const ReviewDiv = styled.div`\ndisplay: flex;\nmargin-top: 28px;\nalign-items: center;\n`\nexport const ReviewDivPName = styled.p`\ncolor: rgba(25, 26, 21, 1);\nfont-family: Inter;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 20px;\nletter-spacing: 0em;\ntext-align: left;\n`\nexport const ReviewDivPPartStar = styled.p`\ndisplay: flex;\nalign-items: center;\n`\nexport const ReviewCommentText = styled.p`\ncolor: rgba(25, 26, 21, 0.5);\nfont-family: Inter;\nfont-size: 16px;\nfont-weight: 400;\nline-height: 20px;\nletter-spacing: 0em;\ntext-align: left;\npadding-top: 16px;\n`\nexport const UlReview = styled.ul`\npadding-bottom: 40px;\n`\n\nexport const ButtonMakeAppoint = styled.button`\nborder-radius: 30px;\nbackground: rgba(52, 112, 255, 1);\ncolor: #fff;\nfont-weight: 500;\nline-height: 20px;\nletter-spacing: -0.01em;\npadding: 14px 32px;\n&:hover,\n    &:focus,\n    &:active {\n            background: var(--hover-color);\n            color: var(--white-color);\n        }\n`\n","import { CloseButtonStyled, SvgClose } from \"components/ModalPortal/ModalPortal.styled\";\nimport icons from '../../img/icons.svg';\n\nconst ModalAppointment = ({ psychologist }) => {\n  return (\n    <div>\n      <CloseButtonStyled type=\"button\">\n        <SvgClose>\n          <use href={`${icons}#icon-exit`}></use>\n        </SvgClose>\n      </CloseButtonStyled>\n      <h1>Make an appointment with a psychologist</h1>\n      <p>You are on the verge of changing your life for the better. Fill out the short form below to book your personal appointment with a professional psychologist. We guarantee confidentiality and respect for your privacy.</p>\n      <div>\n        <img src={psychologist.avatar_url} alt=\"avatar psychologist\" />\n        <p>Your psychologist</p>\n        <p>{psychologist.name}</p>\n      </div>\n      <input placeholder=\"Name\" />\n      <input placeholder=\"+380\" />\n      <input placeholder=\"Email\" />\n      <input placeholder=\"Comment\" />\n      <button>Send</button>\n    </div>\n  );\n};\n\nexport default ModalAppointment;\n","import React, { useState } from 'react';\nimport {\n  AvatarReviewIcon,\n  AvatarWrap,\n  ButtonMakeAppoint,\n  ButtonReadMore,\n  DescriptionText,\n  DescriptionWrap,\n  DivCardPsy,\n  HeadDescriptionWrap,\n  PsyText,\n  PsycWrap,\n  PsychologistName,\n  RatingPriceBlock,\n  RatingPriceText,\n  RatingPriceTextSpan,\n  ReviewCommentText,\n  ReviewDiv,\n  ReviewDivPName,\n  ReviewDivPPartStar,\n  SkillsBlock,\n  SkillsBlockText,\n  SkillsSpan,\n  SvgHeart,\n  SvgImageAvatar,\n  SvgStar,\n  UlReview,\n} from './PsychologistCard.styled';\nimport icons from '../../img/icons.svg';\nimport ModalAppointment from 'components/ModalAppointment/ModalAppointment';\n\nconst PsychologistCard = ({ psychologists }) => {\n  const [loadMoreCount, setLoadMoreCount] = useState(3);\n  const [expandedId, setExpandedId] = useState(null);\n  const [selectedPsychologist, setSelectedPsychologist] = useState(null);\n\n  const handleReadMore = id => {\n    setExpandedId(id === expandedId ? null : id);\n  };\n\n  const loadMore = () => {\n    setLoadMoreCount(prevCount => prevCount + 3);\n  };\n\n  const handleMakeAppointment = (psychologist) => {\n    setSelectedPsychologist(psychologist);\n  };\n\n  return (\n    <PsycWrap>\n      {psychologists.slice(0, loadMoreCount).map(psychologist => (\n        <DivCardPsy\n          key={psychologist.name}\n          className={expandedId === psychologist.name ? 'active' : ''}\n        >\n          <SvgImageAvatar\n            viewBox=\"0 0 14 14\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <circle cx=\"7\" cy=\"7\" r=\"7\" fill=\"#FBFBFB\" />\n            <circle cx=\"7.00065\" cy=\"7.00009\" r=\"4.66667\" fillRule=\"#38CD3E\" />\n          </SvgImageAvatar>\n          <AvatarWrap src={psychologist.avatar_url} alt=\"avatar psychologist\" />\n          <DescriptionWrap>\n            <HeadDescriptionWrap>\n              <PsyText>Psychologist</PsyText>\n              <RatingPriceBlock>\n                <SvgStar>\n                  <use href={`${icons}#icon-star`}></use>\n                </SvgStar>\n                <RatingPriceText>Rating: {psychologist.rating}</RatingPriceText>\n                <RatingPriceText>\n                  Price / 1 hour:{' '}\n                  <RatingPriceTextSpan>\n                    {psychologist.price_per_hour}$\n                  </RatingPriceTextSpan>{' '}\n                </RatingPriceText>\n              </RatingPriceBlock>\n              <SvgHeart>\n                <use href={`${icons}#icon-heart`}></use>\n              </SvgHeart>\n            </HeadDescriptionWrap>\n            <PsychologistName>{psychologist.name}</PsychologistName>\n            <SkillsBlock>\n              <SkillsBlockText>\n                <SkillsSpan>Experience: </SkillsSpan> {psychologist.experience}{' '}\n                years\n              </SkillsBlockText>\n              <SkillsBlockText>\n                <SkillsSpan>License: </SkillsSpan> {psychologist.license}\n              </SkillsBlockText>\n              <SkillsBlockText>\n                <SkillsSpan>Specialization: </SkillsSpan>{' '}\n                {psychologist.specialization}\n              </SkillsBlockText>\n              <SkillsBlockText>\n                <SkillsSpan>Initial consultation: </SkillsSpan>{' '}\n                {psychologist.initial_consultation}\n              </SkillsBlockText>\n            </SkillsBlock>\n            <DescriptionText>{psychologist.about}</DescriptionText>\n            <ButtonReadMore\n              type=\"button\"\n              onClick={() => handleReadMore(psychologist.name)}\n              id={psychologist.name}\n            >\n              {expandedId !== psychologist.name ? 'Read More' : null}\n            </ButtonReadMore>\n            {expandedId === psychologist.name && (\n              <DescriptionWrap>\n                <UlReview>\n                  {psychologist.reviews.map((review, index) => (\n                    <li key={index} className=\"card_reviews\">\n                      <div>\n                        <ReviewDiv>\n                          <AvatarReviewIcon>\n                            {review.reviewer[0]}\n                          </AvatarReviewIcon>\n                          <div>\n                            <ReviewDivPName>{review.reviewer}</ReviewDivPName>\n                            <ReviewDivPPartStar>\n                              <SvgStar>\n                                <use href={`${icons}#icon-star`}></use>\n                              </SvgStar>\n                              {review.rating}\n                            </ReviewDivPPartStar>\n                          </div>\n                        </ReviewDiv>\n                        <ReviewCommentText>{review.comment}</ReviewCommentText>\n                      </div>\n                    </li>\n                  ))}\n                </UlReview>\n                <ButtonMakeAppoint\n                  onClick={() => handleMakeAppointment(psychologist)}\n                >\n                  Make an appointment\n                </ButtonMakeAppoint>\n              </DescriptionWrap>\n            )}\n          </DescriptionWrap>\n        </DivCardPsy>\n      ))}\n      {selectedPsychologist && (\n        <ModalAppointment psychologist={selectedPsychologist} />\n      )}\n      {psychologists.length > loadMoreCount && (\n        <button type=\"button\" onClick={loadMore}>\n          Load more\n        </button>\n      )}\n    </PsycWrap>\n  );\n};\n\nexport default PsychologistCard;\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { Container } from \"../components/Container.styled\";\nimport PsychologistCard from \"../components/Psychologist/PsychologistCard\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\n\nconst Psychologists = () => {\n  const filter = useContext(createContext(null));\n\n  const [psychologists, setPsychologists] = useState([]);\n\n  useEffect(() => {\n    if (!filter) return;\n\n    if (filter.firstFilter) {\n      const database = getDatabase();\n      const databaseRef = ref(database);\n\n      onValue(databaseRef, (snapshot) => {\n        const data = snapshot.val();\n\n        let list;\n        if (filter.filter === \"price_per_hour\") {\n          list = Object.values(data).filter(\n            (item) => item[filter.filter] <= filter.value\n          );\n        } else {\n          list = Object.values(data).filter((item) =>\n            item[filter.filter].includes(filter.value)\n          );\n        }\n\n        setPsychologists(list);\n      });\n    }\n  }, [filter]);\n\n  useEffect(() => {\n    const database = getDatabase();\n    const databaseRef = ref(database);\n\n    onValue(databaseRef, (snapshot) => {\n      const data = snapshot.val();\n      setPsychologists(Object.values(data));\n    });\n  }, []);\n\n  return (\n    <Container>\n      <PsychologistCard psychologists={psychologists}/>\n    </Container>\n  )\n}\n\nexport default Psychologists\n"],"names":["PsycWrap","styled","_templateObject","_taggedTemplateLiteral","DivCardPsy","_templateObject2","AvatarWrap","_templateObject3","SvgImageAvatar","_templateObject4","DescriptionWrap","_templateObject5","HeadDescriptionWrap","_templateObject6","PsyText","_templateObject7","RatingPriceBlock","_templateObject8","RatingPriceText","_templateObject9","RatingPriceTextSpan","_templateObject10","SvgStar","_templateObject11","SvgHeart","_templateObject12","PsychologistName","_templateObject13","SkillsBlock","_templateObject14","SkillsBlockText","_templateObject15","SkillsSpan","_templateObject16","DescriptionText","_templateObject17","ButtonReadMore","_templateObject18","_templateObject19","AvatarReviewIcon","_templateObject20","ReviewDiv","_templateObject21","ReviewDivPName","_templateObject22","ReviewDivPPartStar","_templateObject23","ReviewCommentText","_templateObject24","UlReview","_templateObject25","ButtonMakeAppoint","_templateObject26","_ref","psychologist","_jsxs","children","_jsx","CloseButtonStyled","type","SvgClose","href","concat","icons","src","avatar_url","alt","name","placeholder","psychologists","_useState","useState","_useState2","_slicedToArray","loadMoreCount","setLoadMoreCount","_useState3","_useState4","expandedId","setExpandedId","_useState5","_useState6","selectedPsychologist","setSelectedPsychologist","slice","map","className","viewBox","xmlns","cx","cy","r","fill","fillRule","rating","price_per_hour","experience","license","specialization","initial_consultation","about","onClick","id","reviews","review","index","reviewer","comment","handleMakeAppointment","ModalAppointment","length","prevCount","filter","useContext","createContext","setPsychologists","useEffect","firstFilter","database","getDatabase","databaseRef","ref","onValue","snapshot","list","data","val","Object","values","item","value","includes","Container","PsychologistCard"],"sourceRoot":""}