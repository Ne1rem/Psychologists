{"version":3,"file":"static/js/566.dcb4c8de.chunk.js","mappings":"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","sources":["components/Psychologist/PsychologistCard.styled.js","components/ModalAppointment/ModalAppointment.styled.js","components/ModalAppointment/ModalAppointment.jsx","components/Psychologist/PsychologistCard.jsx","pages/Psychologists.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const PsycWrap = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n`\nexport const DivCardPsy = styled.div`\n    border-radius: 24px;\n    background: rgb(255, 255, 255);\n    padding: 24px;\n    width: 100%;\n    display: flex;\n    `\n\nexport const AvatarWrap = styled.img`\n    width: 120px;\n    height: 120px;\n    border: 2px solid rgba(84, 190, 150, 0.2);\n    border-radius: 30px;\n    padding: 12px;\n`\nexport const SvgImageAvatar = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: #38CD3E;\n  position: relative;\n  top: 9px;\n  left: 104px;\n`;\n\nexport const DescriptionWrap = styled.div`\n    width: 100%;\n    padding-left: 24px;\n`\nexport const HeadDescriptionWrap = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n    width: 100%;\n    \n`\nexport const PsyText = styled.p`\n    color: rgb(138, 138, 137);\n    font-weight: 500;\n    line-height: 1.5;\n    letter-spacing: 0;\n    text-align: left;\n    margin-right: auto;\n`\n\nexport const RatingPriceBlock = styled.div`\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n    margin-right: 28px;\n`\n\nexport const RatingPriceText = styled.p`\n    color: var(--black-color);\n    font-weight: 500;\n    line-height: 1.5;\n    letter-spacing: 0;\n    text-align: left;\n\n&::after {\n        content: '';\n        width: 0px;\n        height: 16px;\n        border: 1px solid rgba(25, 26, 21, 0.2);\n        margin-left: 16px;\n        margin-right: 16px;\n    }\n    \n    &:last-child::after {\n        content: none;\n    }\n`\nexport const RatingPriceTextSpan = styled.span`\n    color: var(--green-color);\n`\nexport const SvgStar = styled.svg`\n    width: 16px;\n    height: 16px;\n    margin-right: 8px;\n`\nexport const SvgHeart = styled.svg`\n    width: 26px;\n    height: 26px;\n    fill: none;\n    stroke: rgb(25, 26, 21);\n`\nexport const PsychologistName = styled.p`\n    font-size: 24px;\n    font-weight: 500;\n    letter-spacing: 0;\n    margin-bottom: 24px;\n`\nexport const SkillsBlock = styled.div`\n    display: flex;\n    gap: 8px 4px;\n    flex-wrap: wrap;\n    margin-bottom: 24px;\n`\n\nexport const SkillsBlockText = styled.p`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 8px 16px 8px 16px;\n    border-radius: 24px;\n    background: rgb(243, 243, 243);\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1;\n    letter-spacing: 0;\n`\nexport const SkillsSpan = styled.span`\n    color: var(--black-light-color);\n`\nexport const DescriptionText = styled.p`\n    color: rgba(25, 26, 21, 0.5);\n    font-weight: 400;\n    line-height: 20px;\n    letter-spacing: 0;\n    margin-bottom: 14px;\n`\nexport const ReadMoreButton = styled.button`\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.5;\n    text-decoration: underline;\n\n`\n\nexport const ButtonReadMore = styled.button`\nfont-family: Inter;\nfont-size: 16px;\nfont-weight: 500;\nletter-spacing: 0em;\ntext-align: left;\ntext-decoration: underline;\n`\n\nexport const AvatarReviewIcon = styled.p`\nbackground: rgba(52, 112, 255, 0.2);\ncolor: (var(--green-color));\nfont-family: Inter;\nfont-size: 20px;\nfont-weight: 500;\nline-height: 20px;\nletter-spacing: 0em;\ntext-align: left;\nborder-radius: 100px;\nheight: 44px;\nwidth: 44px;\nalign-items: center;\njustify-content: center;\ndisplay: flex;\nmargin-right: 12px;\n`\nexport const ReviewDiv = styled.div`\ndisplay: flex;\nmargin-top: 28px;\nalign-items: center;\n`\nexport const ReviewDivPName = styled.p`\ncolor: rgba(25, 26, 21, 1);\nfont-family: Inter;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 20px;\nletter-spacing: 0em;\ntext-align: left;\n`\nexport const ReviewDivPPartStar = styled.p`\ndisplay: flex;\nalign-items: center;\n`\nexport const ReviewCommentText = styled.p`\ncolor: rgba(25, 26, 21, 0.5);\nfont-family: Inter;\nfont-size: 16px;\nfont-weight: 400;\nline-height: 20px;\nletter-spacing: 0em;\ntext-align: left;\npadding-top: 16px;\n`\nexport const UlReview = styled.ul`\npadding-bottom: 40px;\n`\n\nexport const ButtonMakeAppoint = styled.button`\nborder-radius: 30px;\nbackground: rgba(52, 112, 255, 1);\ncolor: #fff;\nfont-weight: 500;\nline-height: 20px;\nletter-spacing: -0.01em;\npadding: 14px 32px;\n&:hover,\n    &:focus,\n    &:active {\n            background: var(--hover-color);\n            color: var(--white-color);\n        }\n`\n","import styled from 'styled-components';\n\n\nexport const CloseButtonStyledAppoint = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: inherit;\n  transition: all 300ms ease;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  &:hover {\n    transform: scale(1.3);\n  }\n`;\n\nexport const ModalBackDrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.2);\n  z-index: 5;\n  overflow: scroll;\n`\nexport const AvatarAppointment = styled.img`\nwidth: 44px;\nheight: 44px;\nborder-radius: 15px;\n`\nexport const SvgCloseAp = styled.svg`\n    width: 32px;\n    height: 32px;\n    stroke: var(--black-color);\n`\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  width: 600px;\n  padding: 64px;\n  border-radius: 30px;\n  background-color: #ffffff;\n  box-sizing: border-box;\nz-index: 6;\n\n  @media (max-width: 768px) {\n    padding: 44px 24px;\n  }\n`\n\nexport const RegisterForm = styled.form`\n  margin-top: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`\n\nexport const RegisterInput = styled.input`\n  border: 1px solid rgba(25, 26, 21, 0.1);\n  border-radius: 12px;\n  padding: 16px 18px 16px 18px;\n  \n`\nexport const MakeAppointmentH = styled.h1 `\nfont-size: 40px;\nfont-weight: 500;\nline-height: 48px;\nletter-spacing: -0.02em;\npadding-bottom: 20px;\n`\nexport const MakeAppointmentP = styled.p `\nfont-size: 16px;\nfont-weight: 400;\nline-height: 20px;\nletter-spacing: 0em;\ncolor: rgba(25, 26, 21, 0.5);\npadding-bottom: 40px;\n`\nexport const MakeAppointmentDivAvatar = styled.div `\ndisplay: flex;\ngap: 14px;\n\n`\n\n\nexport const RegisterButton = styled.button `\n  display: flex;\n  margin-top: 40px;\n  justify-content: center;\n  border: 1px solid;\n  border-radius: 30px;\n  padding: 14px 40px;\n  font-family: Inter;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  background-color: var(--green-color);\n  color: #fbfbfb;\n  cursor: pointer;\n  transition: 0.3s;\n`\n\nexport const MakeAppointmentDivAvatarYourPsy = styled.div `\ndisplay: flex;\nflex-direction:column ;\ngap:4px;\n`\n\nexport const MakeAppointmentDivAvatarYourPsyP1 = styled.p `\nfont-size: 12px;\nfont-weight: 500;\nline-height: 16px;\nletter-spacing: 0em;\ncolor: rgba(138, 138, 137, 1);\n`\n\nexport const MakeAppointmentDivAvatarYourPsyP2 = styled.p `\n\nfont-size: 16px;\nfont-weight: 500;\nline-height: 24px;\nletter-spacing: 0em;\ncolor: rgba(25, 26, 21, 1);\n\n`\n\nexport const MakeAppointmentDivNumberTime = styled.div `\ndisplay: flex;\ngap : 8px;\n`\n\n","import { useEffect, useState } from 'react';\nimport icons from '../../img/icons.svg';\nimport 'react-time-picker/dist/TimePicker.css';\nimport 'react-clock/dist/Clock.css';\nimport TimePicker from 'react-time-picker';\nimport { AvatarAppointment, CloseButtonStyledAppoint, MakeAppointmentDivAvatar, MakeAppointmentDivAvatarYourPsy, MakeAppointmentDivAvatarYourPsyP1, MakeAppointmentDivAvatarYourPsyP2, MakeAppointmentDivNumberTime, MakeAppointmentH, MakeAppointmentP, ModalBackDrop, ModalWindow, RegisterButton, RegisterForm, RegisterInput, SvgCloseAp } from \"./ModalAppointment.styled\";\n\nconst ModalAppointment = ({ psychologist, closeModal }) => {\n\n    const [value, onChange] = useState('00:00');\n\n    useEffect(() => {\n        const handleKeyDown = event => {\n          if (event.code === 'Escape') {\n            closeModal();\n          }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        return () => window.removeEventListener('keydown', handleKeyDown);\n      }, [closeModal]);\n    \n    const [formData, setFormData] = useState({\n      name: '',\n      number: '',\n      email: '',\n      comment: ''\n    });\n  \n    const handleSubmit = (event) => {\n      event.preventDefault();\n      console.log('Form submitted:', formData);\n      setFormData({\n        name: '',\n        number: '',\n        email: '',\n        comment: ''\n      });\n      closeModal();\n    };\n  \n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    };\n  \n    return (\n      <ModalBackDrop >\n        <ModalWindow>\n          <CloseButtonStyledAppoint type=\"button\" onClick={() => closeModal(null)}>\n            <SvgCloseAp>\n              <use href={`${icons}#icon-exit`}></use>\n            </SvgCloseAp>\n          </CloseButtonStyledAppoint>\n          <MakeAppointmentH>Make an appointment with a psychologist</MakeAppointmentH>\n          <MakeAppointmentP>You are on the verge of changing your life for the better. Fill out the short form below to book your personal appointment with a professional psychologist. We guarantee confidentiality and respect for your privacy.</MakeAppointmentP>\n          <MakeAppointmentDivAvatar>\n            <AvatarAppointment src={psychologist.avatar_url} alt=\"avatar psychologist\" />\n            <MakeAppointmentDivAvatarYourPsy>\n            <MakeAppointmentDivAvatarYourPsyP1>Your psychologist</MakeAppointmentDivAvatarYourPsyP1>\n            <MakeAppointmentDivAvatarYourPsyP2>{psychologist.name}</MakeAppointmentDivAvatarYourPsyP2>\n            </MakeAppointmentDivAvatarYourPsy>\n          </MakeAppointmentDivAvatar>\n          <RegisterForm onSubmit={handleSubmit}>\n            <RegisterInput\n              placeholder=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n            />\n            <MakeAppointmentDivNumberTime>\n              <RegisterInput\n                placeholder=\"+380\"\n                type=\"number\"\n                name=\"number\"\n                value={formData.number}\n                onChange={handleChange}\n              />\n              <TimePicker onChange={onChange} value={value} />\n            </MakeAppointmentDivNumberTime>\n            <RegisterInput\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n            />\n            <RegisterInput\n              placeholder=\"Comment\"\n              type=\"text\"\n              name=\"comment\"\n              value={formData.comment}\n              onChange={handleChange}\n              style={{height: `116px`}}\n            />\n            <RegisterButton type=\"submit\">\n              Send\n            </RegisterButton>\n          </RegisterForm>\n        </ModalWindow>\n      </ModalBackDrop>\n    );\n  };\n  \n  export default ModalAppointment;\n","import React, { useState } from 'react';\nimport {\n  AvatarReviewIcon,\n  AvatarWrap,\n  ButtonMakeAppoint,\n  ButtonReadMore,\n  DescriptionText,\n  DescriptionWrap,\n  DivCardPsy,\n  HeadDescriptionWrap,\n  PsyText,\n  PsycWrap,\n  PsychologistName,\n  RatingPriceBlock,\n  RatingPriceText,\n  RatingPriceTextSpan,\n  ReviewCommentText,\n  ReviewDiv,\n  ReviewDivPName,\n  ReviewDivPPartStar,\n  SkillsBlock,\n  SkillsBlockText,\n  SkillsSpan,\n  SvgHeart,\n  SvgImageAvatar,\n  SvgStar,\n  UlReview,\n} from './PsychologistCard.styled';\nimport icons from '../../img/icons.svg';\nimport ModalAppointment from 'components/ModalAppointment/ModalAppointment';\n\nconst PsychologistCard = ({ psychologists }) => {\n  const [loadMoreCount, setLoadMoreCount] = useState(3);\n  const [expandedId, setExpandedId] = useState(null);\n  const [selectedPsychologist, setSelectedPsychologist] = useState(null);\n\n  const handleReadMore = id => {\n    setExpandedId(id === expandedId ? null : id);\n  };\n\n  const loadMore = () => {\n    setLoadMoreCount(prevCount => prevCount + 3);\n  };\n\n  const handleMakeAppointment = psychologist => {\n    setSelectedPsychologist(psychologist);\n  };\n\n  return (\n    <PsycWrap>\n      {psychologists.slice(0, loadMoreCount).map(psychologist => (\n        <DivCardPsy\n          key={psychologist.name}\n          className={expandedId === psychologist.name ? 'active' : ''}\n        >\n          <SvgImageAvatar\n            viewBox=\"0 0 14 14\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <circle cx=\"7\" cy=\"7\" r=\"7\" fill=\"#FBFBFB\" />\n            <circle cx=\"7.00065\" cy=\"7.00009\" r=\"4.66667\" fillRule=\"#38CD3E\" />\n          </SvgImageAvatar>\n          <AvatarWrap src={psychologist.avatar_url} alt=\"avatar psychologist\" />\n          <DescriptionWrap>\n            <HeadDescriptionWrap>\n              <PsyText>Psychologist</PsyText>\n              <RatingPriceBlock>\n                <SvgStar>\n                  <use href={`${icons}#icon-star`}></use>\n                </SvgStar>\n                <RatingPriceText>Rating: {psychologist.rating}</RatingPriceText>\n                <RatingPriceText>\n                  Price / 1 hour:{' '}\n                  <RatingPriceTextSpan>\n                    {psychologist.price_per_hour}$\n                  </RatingPriceTextSpan>{' '}\n                </RatingPriceText>\n              </RatingPriceBlock>\n              <SvgHeart>\n                <use href={`${icons}#icon-heart`}></use>\n              </SvgHeart>\n            </HeadDescriptionWrap>\n            <PsychologistName>{psychologist.name}</PsychologistName>\n            <SkillsBlock>\n              <SkillsBlockText>\n                <SkillsSpan>Experience: </SkillsSpan> {psychologist.experience}{' '}\n                years\n              </SkillsBlockText>\n              <SkillsBlockText>\n                <SkillsSpan>License: </SkillsSpan> {psychologist.license}\n              </SkillsBlockText>\n              <SkillsBlockText>\n                <SkillsSpan>Specialization: </SkillsSpan>{' '}\n                {psychologist.specialization}\n              </SkillsBlockText>\n              <SkillsBlockText>\n                <SkillsSpan>Initial consultation: </SkillsSpan>{' '}\n                {psychologist.initial_consultation}\n              </SkillsBlockText>\n            </SkillsBlock>\n            <DescriptionText>{psychologist.about}</DescriptionText>\n            <ButtonReadMore\n              type=\"button\"\n              onClick={() => handleReadMore(psychologist.name)}\n              id={psychologist.name}\n            >\n              {expandedId !== psychologist.name ? 'Read More' : null}\n            </ButtonReadMore>\n            {expandedId === psychologist.name && (\n              <DescriptionWrap>\n                <UlReview>\n                  {psychologist.reviews.map((review, index) => (\n                    <li key={index} className=\"card_reviews\">\n                      <div>\n                        <ReviewDiv>\n                          <AvatarReviewIcon>\n                            {review.reviewer[0]}\n                          </AvatarReviewIcon>\n                          <div>\n                            <ReviewDivPName>{review.reviewer}</ReviewDivPName>\n                            <ReviewDivPPartStar>\n                              <SvgStar>\n                                <use href={`${icons}#icon-star`}></use>\n                              </SvgStar>\n                              {review.rating}\n                            </ReviewDivPPartStar>\n                          </div>\n                        </ReviewDiv>\n                        <ReviewCommentText>{review.comment}</ReviewCommentText>\n                      </div>\n                    </li>\n                  ))}\n                </UlReview>\n                <ButtonMakeAppoint\n                  onClick={() => handleMakeAppointment(psychologist)}\n                >\n                  Make an appointment\n                </ButtonMakeAppoint>\n              </DescriptionWrap>\n            )}\n          </DescriptionWrap>\n        </DivCardPsy>\n      ))}\n      {selectedPsychologist && (\n        <ModalAppointment\n          psychologist={selectedPsychologist}\n          closeModal={setSelectedPsychologist}\n        />\n      )}\n      {psychologists.length > loadMoreCount && (\n        <button type=\"button\" onClick={loadMore}>\n          Load more\n        </button>\n      )}\n    </PsycWrap>\n  );\n};\n\nexport default PsychologistCard;\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { Container } from \"../components/Container.styled\";\nimport PsychologistCard from \"../components/Psychologist/PsychologistCard\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\n\nconst Psychologists = () => {\n  const filter = useContext(createContext(null));\n\n  const [psychologists, setPsychologists] = useState([]);\n\n  useEffect(() => {\n    if (!filter) return;\n\n    if (filter.firstFilter) {\n      const database = getDatabase();\n      const databaseRef = ref(database);\n\n      onValue(databaseRef, (snapshot) => {\n        const data = snapshot.val();\n\n        let list;\n        if (filter.filter === \"price_per_hour\") {\n          list = Object.values(data).filter(\n            (item) => item[filter.filter] <= filter.value\n          );\n        } else {\n          list = Object.values(data).filter((item) =>\n            item[filter.filter].includes(filter.value)\n          );\n        }\n\n        setPsychologists(list);\n      });\n    }\n  }, [filter]);\n\n  useEffect(() => {\n    const database = getDatabase();\n    const databaseRef = ref(database);\n\n    onValue(databaseRef, (snapshot) => {\n      const data = snapshot.val();\n      setPsychologists(Object.values(data));\n    });\n  }, []);\n\n  return (\n    <Container>\n      <PsychologistCard psychologists={psychologists}/>\n    </Container>\n  )\n}\n\nexport default Psychologists\n"],"names":["PsycWrap","styled","_templateObject","_taggedTemplateLiteral","DivCardPsy","_templateObject2","AvatarWrap","_templateObject3","SvgImageAvatar","_templateObject4","DescriptionWrap","_templateObject5","HeadDescriptionWrap","_templateObject6","PsyText","_templateObject7","RatingPriceBlock","_templateObject8","RatingPriceText","_templateObject9","RatingPriceTextSpan","_templateObject10","SvgStar","_templateObject11","SvgHeart","_templateObject12","PsychologistName","_templateObject13","SkillsBlock","_templateObject14","SkillsBlockText","_templateObject15","SkillsSpan","_templateObject16","DescriptionText","_templateObject17","ButtonReadMore","_templateObject18","_templateObject19","AvatarReviewIcon","_templateObject20","ReviewDiv","_templateObject21","ReviewDivPName","_templateObject22","ReviewDivPPartStar","_templateObject23","ReviewCommentText","_templateObject24","UlReview","_templateObject25","ButtonMakeAppoint","_templateObject26","CloseButtonStyledAppoint","ModalBackDrop","AvatarAppointment","SvgCloseAp","ModalWindow","RegisterForm","RegisterInput","MakeAppointmentH","MakeAppointmentP","MakeAppointmentDivAvatar","RegisterButton","MakeAppointmentDivAvatarYourPsy","MakeAppointmentDivAvatarYourPsyP1","MakeAppointmentDivAvatarYourPsyP2","MakeAppointmentDivNumberTime","_ref","psychologist","closeModal","_useState","useState","_useState2","_slicedToArray","value","onChange","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","_useState3","name","number","email","comment","_useState4","formData","setFormData","handleChange","_event$target","target","_objectSpread","_defineProperty","_jsx","children","_jsxs","type","onClick","href","concat","icons","src","avatar_url","alt","onSubmit","preventDefault","console","log","placeholder","TimePicker","style","height","psychologists","loadMoreCount","setLoadMoreCount","expandedId","setExpandedId","_useState5","_useState6","selectedPsychologist","setSelectedPsychologist","slice","map","className","viewBox","xmlns","cx","cy","r","fill","fillRule","rating","price_per_hour","experience","license","specialization","initial_consultation","about","id","reviews","review","index","reviewer","handleMakeAppointment","ModalAppointment","length","prevCount","filter","useContext","createContext","setPsychologists","firstFilter","database","getDatabase","databaseRef","ref","onValue","snapshot","list","data","val","Object","values","item","includes","Container","PsychologistCard"],"sourceRoot":""}